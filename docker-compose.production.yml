version: "3.8"
services:
  nginx:
    ports:
      - "${APP_SERVER_PORT}:80"
    restart: always
    build:
      context: ${DOCKER_PATH}/nginx
      dockerfile: Dockerfile
    volumes:
      - ${DOCKER_PATH}/nginx/conf.d/default.conf:${APP_CONFIG_PATH}:ro
      - ${APP_LOCAL_PATH}:${APP_PATH}

  pgsql:
    ports:
      - "${PGSQL_PORT}:5432"
    restart: always
    build:
      context: ${DOCKER_PATH}
      dockerfile: pgsql.Dockerfile
    environment:
      POSTGRES_DATABASE: ${PGSQL_DATABASE}
      POSTGRES_USER: ${PGSQL_USER}
      POSTGRES_PASSWORD: ${PGSQL_PASSWORD}
      POSTGRES_ROOT_PASSWORD: ${PGSQL_ROOT_PASSWORD}
    volumes:
      - .:/docker-entrypoint-initdb.d
      - ${DOCKER_DATA}/db:${PGSQL_DATA_PATH}
    depends_on:
      - nginx

  php-fpm:
    build:
      context: ${DOCKER_PATH}/php-fpm
      dockerfile: Dockerfile
    env_file:
      - ${DOCKER_PATH}/php-fpm/xdebug.env
    volumes:
      - ${APP_LOCAL_PATH}:${APP_PATH}
      - ${DOCKER_PATH}/PHP-FPM/php.ini:${PHP_FPM_CONFIG_PATH}:ro
    depends_on:
      - pgsql
      - nginx

  frontend:
    build:
      context: ${DOCKER_PATH}/frontend
      dockerfile: Dockerfile
    volumes:
      - ${APP_LOCAL_PATH}:${APP_PATH}
    depends_on:
      - php-fpm

volumes:
  dbdata:
    driver: local
